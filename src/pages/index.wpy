<style>
.mask {
  position: fixed;
  width: 100%;
  height: 100%;
  background-color: rgba(0, 0, 0, 0.2);
  color: black;
  display: flex;
  align-items: center;
  justify-content: center;
}
</style>

<template>
<MsgList :messages.sync="messages" @tap.user="bindTap" />
<ControlBar :selections.sync="selections" @selection.user="bindSelection" />
<view wx:if="{{showMask}}" class="mask" @tab="bindMask">
  {{toast}}
</view>
</template>

<script>
import wepy from 'wepy'
import ControlBar from '@/components/ControlBar'
import MsgList from '@/components/MsgList'
import Director from '../engine/Director.js'
import EventBus from '../engine/EventBus.js'

export default class Index extends wepy.page {
  components = {
    ControlBar: ControlBar,
    MsgList: MsgList
  }

  data = {
    messages: [],
    selections: [],
    showMask: false,
    toast: ''
  }

  constructor() {
    super()
    this.director = new Director()
    EventBus.registerEvent('ActionFinish')
    EventBus.registerEvent('SetSelection')
    EventBus.registerEvent('ChooseSelection')
  }

  methods = {
    bindSelection(index, e) {
      EventBus.publish(EventBus.Events.ChooseSelection, index)
    },
    bindTap() {
      this.collapseControlBar(true)
      this.director.action()
    },
    bindMask() {
      this.showMask = false
    }
  }

  onActionFinish = (arg) => {
    this.pushMessage({
      id: arg.script.id,
      avatar: arg.role.avatar,
      name: arg.role.name,
      content: arg.script.content,
      type: arg.script.type,
      fromMe: arg.role.type === 1
    })
    this.activeControlBar(false)
    this.$apply()
  }

  onSetSelection = (arg) => {
    let selections = arg.selections
    let selectionString = []
    for (let idx in selections) {
      selectionString.push(selections[idx].content)
    }
    this.setSelections(selectionString)
    this.activeControlBar(true)
    this.$apply()
  }

  onLoad(options) {
    EventBus.subscribe(EventBus.Events.ActionFinish, this.onActionFinish)
    EventBus.subscribe(EventBus.Events.SetSelection, this.onSetSelection)
    this.director.prepare()
    this.director.action()
  }

  onUnload() {
    EventBus.unsubscribe(EventBus.Events.ActionFinish, this.onActionFinish)
    EventBus.unsubscribe(EventBus.Events.SetSelection, this.onSetSelection)
  }

  activeControlBar(flag) {
    this.$invoke('ControlBar', 'setActive', flag)
  }

  collapseControlBar(flag) {
    this.$invoke('ControlBar', 'setCollapse', flag)
  }

  enableLoadMore(flag) {
    this.$invoke('MsgList', 'setEnableLoadMore', flag)
  }

  stopLoadMore() {
    this.$invoke('MsgList', 'stopLoadMore')
  }

  scrollToBottom() {
    this.$invoke('MsgList', 'scrollToBottom')
  }

  setSelections(selections) {
    this.selections = selections
  }

  pushMessage(message) {
    message['ani'] = true
    this.messages.push(message)
  }

  pushMsgList(msgList) {
    this.messages = this.messages.concat(msgList)
  }

  pullMsgList(msgList) {
    this.messages = msgList.concat(this.messages)
  }

  showMask(toast) {
    this.toast = toast
    this.showMask = true
  }
}
</script>
